{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/preprocessing/data.py:645: DataConversionWarning: Data with input dtype int64 were all converted to float64 by StandardScaler.\n",
      "  return self.partial_fit(X, y)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/base.py:464: DataConversionWarning: Data with input dtype int64 were all converted to float64 by StandardScaler.\n",
      "  return self.fit(X, **fit_params).transform(X)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "B_PESSOA-------------------------------------\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n",
      "/media/wesleyz/HD1Tera/anacond3/lib/python3.6/site-packages/sklearn/metrics/classification.py:1143: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples.\n",
      "  'precision', 'predicted', average, warn_for)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[('precision', 1.0, (      k  valor metrica\n",
      "14   72    1.0       j\n",
      "15   77    1.0       j\n",
      "16   82    1.0       j\n",
      "17   87    1.0       j\n",
      "18   92    1.0       j\n",
      "19   97    1.0       j\n",
      "20  102    1.0       j, 1.0)), ('recall', 0.6363636363636364, (    k     valor metrica\n",
      "1   7  0.636364       j\n",
      "3  17  0.636364       j, 0.6363636363636364)), ('f1-score', 0.6666666666666666, (      k     valor metrica\n",
      "14   72  0.666667       j\n",
      "15   77  0.666667       j\n",
      "17   87  0.666667       j\n",
      "18   92  0.666667       j\n",
      "19   97  0.666667       j\n",
      "20  102  0.666667       j, 0.6666666666666666)), ('support', 22, (      k  valor metrica\n",
      "0     2     22       j\n",
      "1     7     22       j\n",
      "2    12     22       j\n",
      "3    17     22       j\n",
      "4    22     22       j\n",
      "5    27     22       j\n",
      "6    32     22       j\n",
      "7    37     22       j\n",
      "8    42     22       j\n",
      "9    47     22       j\n",
      "10   52     22       j\n",
      "11   57     22       j\n",
      "12   62     22       j\n",
      "13   67     22       j\n",
      "14   72     22       j\n",
      "15   77     22       j\n",
      "16   82     22       j\n",
      "17   87     22       j\n",
      "18   92     22       j\n",
      "19   97     22       j\n",
      "20  102     22       j\n",
      "21  107     22       j\n",
      "22  112     22       j\n",
      "23  117     22       j\n",
      "24  122     22       j\n",
      "25  127     22       j\n",
      "26  132     22       j\n",
      "27  137     22       j\n",
      "28  142     22       j\n",
      "29  147     22       j\n",
      "30  152     22       j\n",
      "31  157     22       j\n",
      "32  162     22       j\n",
      "33  167     22       j\n",
      "34  172     22       j\n",
      "35  177     22       j\n",
      "36  182     22       j\n",
      "37  187     22       j\n",
      "38  192     22       j\n",
      "39  197     22       j, 22))]\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAW4AAAD8CAYAAABXe05zAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4yLCBodHRwOi8vbWF0cGxvdGxpYi5vcmcvOIA7rQAADx1JREFUeJzt3W+MZXddx/H3t92t2XToKhSv7Za4CQQ1caC4V8XinztCFGxSBCEBlQQ0DhgJJOyTfSDGRGI2wSXxAYltUiMxwmALIcRNCI12AkU0nbWVaVopBPdBF7qkELZO3YiLXx/s3c06zMz5ze6cO+frvF/JTe/p/d0zn/3m5JMz596zG5mJJKmO63Y7gCRpeyxuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYvb1sdObb745Dx8+3LT2ueee48Ybb+wjRi8q5a2UFczbp0pZYW/mPXXq1DOZ+cKmxZm5448jR45kqwcffLB57RBUylspa6Z5+1Qpa+bezAusZGPHeqlEkoqxuCWpGItbkoqxuCWpGItbkorpLO6IuDUiHr3i8Z2I+MNZhJMkfb/O73Fn5teB2wEiIoCvAZ/sOZckaRPbvVTyc8Czmfl4H2EkSd22W9xvAT7WRxBJUpvIxn8sOCKuA54C7sjM0xu8vggsAoxGoyNLS0tN+11bW2Nubq41b29Wz5xrWjc6AGfP7+zPnj90cGd3ODWU2bYyb38qZYW9mXdhYeFUZo5b1m6nuF8N/Elm3tG1djwe58rKStN+l5eXmUwmTWv7dPjYyaZ1R+cvcGJ1Z/+Kl9PH79zR/V0ylNm2Mm9/KmWFvZk3IpqLezuXSt6Kl0kkadc1FXdE7AfuAv623ziSpC5Nv/Nn5n8DP9xzFklSA++clKRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRimoo7In4wIj4REU9GxBMR8TN9B5MkbWxf47o/B/45M38jIm4ADvSYSZK0hc7ijoibgF8Dfg8gM78LfLfnXJKkTURmbr0g4nbgI8Ap4BXAvwDvyczn1q1bBBYBRqPRkaWlpaYAa2trzM3NbT/5Dls9c65p3egAnD2/sz97/tDBnd3h1FBm28q8/amUFfZm3oWFhVOZOW5Z21LcY+BhYCEzlyPiw8C3M/P9m71nPB7nyspKU9jl5WUmk0nT2j4dPnayad3R+QucWG29wtTm9PE7d3R/lwxltq3M259KWWFv5o2I5uJu+XDyKeBcZi5Ptz8F/NRVZpMkXaPO4s7Mp4EnppdMACbA432GkiRtrvV3/t8H7o2I/cDXgHf0F0mStJWm4s7MR4EjPWeRJDXwzklJKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRiLG5JKsbilqRimv6x4Ih4Gnh6uvlfmfmz/UWSJG2lqbgBMvP2PoNIktp4qUSSimkt7oyIhyNiJSJ+p9dEkqQtRWZ2L4q4NTO/HhG3AH8PvDMzP79uzSKwCDAajY4sLS01BVhbW2Nubm7bwXfa6plzTetGB+Ds+Z392fOHDu7sDqeGMttW5u1PpaywN/MuLCycysxxy9qm4v4/b4g4DjyTmX+22ZrxeJwrKytN+1teXmYymWwrQx8OHzvZtO7o/AVOrDZ/NNDk9PE7d3R/lwxltq3M259KWWFv5o2I5uLuvFQSEXMRMXfpOfAa4LFrSihJumotp463APdHxKX1H83Mz/SaSpK0qc7izsyvAC+fQRZJUgO/DihJxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxVjcklSMxS1JxTQXd0RcFxErEbHcYx5JUoftnHG/G/hyX0EkSW2aijsibgVeD9zdbxxJUpfIzO5FEUvACeAHgA9k5mSDNYvAIsBoNDqytLTUFGBtbY25ubltRO7H6plzTetGB+Ds+Z7D7JCurPOHDs4uTIOhHAutKuWtlBX2Zt6FhYVTmTluWbuva0FEvBb4dmY+HBE/v9m6zLwHuAdgPB7nZDJpCru8vEzr2j69/djJpnVH5y9wYrVzbIPQlfX0b01mF6bBUI6FVpXyVsoK5u3ScqnkVcBdEXEauA94ZUR8utdUkqRNdRZ3Zr4/M2/LzMPAm4F/ysy7ek8mSdqQ3+OWpGK2dbE2Mx8CJv1EkSS18IxbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpGItbkoqxuCWpmKZ/LDgivgDcCNwAPAi8JzO/12cwSdLGWs+4X5eZtwM/CbwYeHN/kSRJW2kq7sx8dvp0PxfPurO3RJKkLTVf446IzwPfBJ4G7u8tkSRpS5HZfvIcETdysbQ/lJkPrHttEVgEGI1GR5aWlpr2uba2xtzc3OXt1TPnmvPshtEBOHt+t1O06co6f+jg7MI0WH8sDF2lvJWywt7Mu7CwcCozxy1rt1XcABHxB8BPZOa7N1szHo9zZWWlaX/Ly8tMJpPL24ePndxWnlk7On+BE6tNn+nuuq6sp4/fOcM03dYfC0NXKW+lrLA380ZEc3F3XiqJiOdHxM3T5zcArwWeuKaEkqSr1nLq+AJgKSL2A9cDDwB395pKkrSpzuLOzK8AR2aQRZLUwDsnJakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JakYi1uSirG4JamYzuKOiBdFxIMR8fj08d5ZBJMkbWxfw5oLwPsy85GIuAn414j4h8xc7TmbJGkDnWfcmfmNzHxk+vxZ4Engtr6DSZI2tq1r3BHxEuBlwBf7iSNJ6hKZ2bYw4nnA54A/zcz7Nnh9EVgEGI1GR5aWlpr2u7a2xtzc3OXt1TPnmt63W0YH4Oz53U7Rpivr/KGDswvTYP2xMHSV8lbKCnsz78LCwqnMHLesbSruiNgPnAQeyMwPdq0fj8e5srLS8vNZXl5mMplc3j587GTT+3bL0fkLnFht+Whg93VlPX38zhmm6bb+WBi6SnkrZYW9mTcimou75VslAdwLPNZS2pKkfrVc434V8Dbg1RHx6PRxV8+5JEmb6PydPzMfAmIGWSRJDbxzUpKKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KKsbglqRiLW5KK6SzuiLg3Is5GxOkZ5JEkdWg54/4I8Ct9B5Ekteks7sz8HPCtGWSRJDWIzOxeFHEb8FBmHt5izSKwCDAajY4sLS01BVhbW2Nubu7y9uqZc03v2y2jA3D2/G6naFMpK8wm7/yhgzu2r/XH7lZ2+7jejWPhWma9ndluZNbzvjTfa/kzLywsnMrMccvaHSvuK43H41xZWWlZyvLyMpPJ5PL24WMnm963W47OX+DE6r7djtGkUlaYTd7Tx+/csX2tP3a3stvH9W4cC9cy6+3MdiOznvel+V7Lnzkimovbb5VIUjEWtyQV0/J1wI8BDwO3RcRTEfG+/mNJkjbTedErM986iyCSpDZeKpGkYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSrG4pakYixuSSqmqbgj4jUR8W8R8dWI+EDfoSRJm+ss7oi4HrgHuAv4ceBXI+KOvoNJkjbWcsb908CZzHwyMy8AHwXe2G8sSdJmWor7NuDMFdtPAYf6iSNJ6hKZufWCiDcBb8rMt0y33wy8MTPfum7dIrA43fwx4MuNGW4GntlO6F1WKW+lrGDePlXKCnsz749m5gtbFu5rWLP+DHv9GTgAmXkPF6+Fb0tErGTmeLvv2y2V8lbKCubtU6WsYN4uLZdKHgZui4iXRsQ+4DeBT/UbS5K0mc4z7sz8XkS8E/g0sB/4eGY+1HsySdKGWi6VkJmf5eJXAfuw7csru6xS3kpZwbx9qpQVzLulzg8nJUnD4i3vklTMzIq767b5iNgfEX8zff1URPR1aaZTQ9Z3RcTTEfHo9PGO3ch5RZ57I+JsRJze5PUhzbYr69Bm+6KIeDAiHp8+3rvBmkHMtzHr0Ob7hWmOxyPiw9M7ta98fRCzvSJPV97ZzDcze38A1wNfA17KxevqDwN3rFvzTuCvps9/HfjsLLJdZdZ3AX+8G/k2yfyLwMuB05u8PojZNmYd2mxvAV4xfX4T8O/A/BDn25h1aPO9afrf64DPAG8Z4my3kXcm853VGXfLbfNvAP56+vzTwJGIeN6M8l2p3C3+mfk54FtbLBnKbFuyDkpmfiMzH5k+fxZ4kov3MlxpEPNtzDoo05xw8RtrNwDrP3QbxGwvacg7E7Mq7pbb5i+vycz/AZ4Gbp1Juk1yTG12i//vRsSXIuLjETH0vwJgKLNtNcjZRsRLgJcBX1z30uDmu0VWGNh8I+LzwDe5OLf71708xNlulRdmMF8/nLw69wMvzsyXAf8IfGSX8/x/MsjZTs/y7gPek5nf2e08W+nIOrj5ZuYvcLGMfwj45V2O06kj70zmO6vibrlt/vKaiLgO+BHg6zNJt0mOqe/LmpnPZOZ3p5t3A6+cUbarNZTZdhribCNiP/AJ4KOZed8GSwYz366sQ5wvQGY+B/wd8Pp1Lw1mtlfaLO+s5jur4m65bf5TwNumz+8CHsnM/5hRvit1Zo2IW67YfAPw2AzzXY2hzLbT0GYbEQHcCzyWmR/cZNkg5tuSdUjzjYjnR8TN0+c3AK8Fnli3bBCzhba8s5pv052T1yo3uW0+It41ff0vgL8Efikivgo8C/z2LLJdZdb3RcTrgO8B3wbevhtZL4mIjwET4IUR8RTwIeA/YVizhaasg5ot8CouFseXIuLR6f/7I6bXWQc235asQ5rvC4Cl6W8J1wMPAHcPsRemWvLOZL7eOSlJxfjhpCQVY3FLUjEWtyQVY3FLUjEWtyQVY3FLUjEWtyQVY3FLUjH/C2aeY/9oRw5RAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "#!/usr/bin/env python3\n",
    "# -*- coding: utf-8 -*-\n",
    "\"\"\"\n",
    "Created on Fri Jun  7 12:52:01 2019\n",
    "\n",
    "@author: wesleyz\n",
    "\"\"\"\n",
    "%matplotlib inline\n",
    "import os\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.colors import ListedColormap\n",
    "from sklearn import neighbors, datasets\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import classification_report\n",
    "import pandas as pd \n",
    "from sklearn import preprocessing\n",
    "\n",
    "path = os.getcwd() # my actual path    \n",
    "# Read data from file 'filename.csv' \n",
    "# (in the same directory that your python process is based)\n",
    "# Control delimiters, rows, column names with read_csv (see later) \n",
    "\n",
    "\n",
    "\"features-harem-cd-1.csv\"\n",
    "\"labels-harem-cd-1.csv\"\n",
    "\n",
    "filedata = path + '/features-harem-cd-1.csv'\n",
    "fileLabel = path + '/labels-names-harem-cd-1_.csv'\n",
    "fullfile = path + '/full-harem-cd-1.csv'\n",
    "\n",
    "#data = pd.read_csv(\"features-harem-cd-1.csv\") \n",
    "data = pd.read_csv(filedata) \n",
    "label = pd.read_csv(fileLabel) \n",
    "fulldata = pd.read_csv(fullfile) \n",
    "\n",
    "\n",
    "\n",
    "def classifica(df):\n",
    "    # Preview the first 5 lines of the loaded data \n",
    "    from sklearn.model_selection import train_test_split\n",
    "    X_train, X_test, y_train, y_test = train_test_split(df.loc[:, df.columns != 'label'], fulldata.label, test_size=0.30, random_state=42)\n",
    "    maxi = []\n",
    "    print('B_PESSOA-------------------------------------')\n",
    "    for j in  ['precision', 'recall', 'f1-score', 'support']: #['precision']:\n",
    "        bench = []\n",
    "        fig = plt.figure()    \n",
    "        for i in range(2,200,5):    \n",
    "            clf = neighbors.KNeighborsClassifier(i, n_jobs = 20)\n",
    "            clf.fit(X_train,y_train)\n",
    "            #clf.fit(df.loc[df['label'] == 2], df.loc[df['label'] == 2].label)\n",
    "            y_pred = clf.predict(X_test)        \n",
    "            #y_pred = clf.predict(fulldata.loc[:, fulldata.columns != 'label'])        \n",
    "            cr = classification_report(y_test, y_pred, output_dict=True)\n",
    "            #bench.append((i, cr['I_PESSOA'][j], 'j'))        \n",
    "            bench.append((i, cr['2'][j], 'j'))\n",
    "            \n",
    "            \n",
    "        benc = pd.DataFrame(bench, columns=['k', 'valor', 'metrica',])\n",
    "        aux = benc.loc[benc['valor'] == benc.valor.max()],  benc.valor.max()\n",
    "        maxi.append((j, benc.valor.max(), aux))\n",
    "        #benc.hist()\n",
    "        ax = plt.axes()\n",
    "        ax.plot(benc.k, benc.valor, label = j);\n",
    "        plt.legend()\n",
    "        plt.show()\n",
    "        \n",
    "    print(maxi)\n",
    "    return maxi\n",
    "    \n",
    "\n",
    "\n",
    "from sklearn.metrics.pairwise import cosine_similarity\n",
    "\n",
    "from sklearn import preprocessing\n",
    "\n",
    "df = fulldata\n",
    "\n",
    "# Get column names first\n",
    "names = df.columns\n",
    "# Create the Scaler object\n",
    "scaler = preprocessing.StandardScaler()\n",
    "# Fit your data on the scaler object\n",
    "scaled_df = scaler.fit_transform(df)\n",
    "scaled_df = pd.DataFrame(scaled_df, columns=names)\n",
    "\n",
    "df = scaled_df\n",
    "\n",
    "cosimi = cosine_similarity(scaled_df)\n",
    "\n",
    "dfS = pd.DataFrame(scaled_df)\n",
    "\n",
    "\n",
    "cosimi.sort(axis=0)\n",
    "cosimi.sort(axis=1)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "metrics = classifica(scaled_df)\n",
    "from numpy import linalg as LA\n",
    "w, v = LA.eigh(scaled_df.cov())\n",
    "wS = pd.Series(w)\n",
    "wS.hist()\n",
    "#v.shape\n",
    "#w.shape\n",
    "df5 = pd.DataFrame(w)\n",
    "#df5 = pd.DataFrame(v)\n",
    "\n",
    "#df.cov()\n",
    "\n",
    "plt.matshow(cosimi)\n",
    "plt.show()\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "for m in metrics:\n",
    "    for ms in metrics[m]:\n",
    "        print (ms)\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " #metrics[0]0]\n",
    "#metrics[0][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'f1-score'"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics[2][0]\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
